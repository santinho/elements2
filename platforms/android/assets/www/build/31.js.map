{"version":3,"sources":["../../src/components/spinner/spinner.module.ts","../../src/pages/item-details-spinner/item-details-spinner.module.ts","../../src/components/spinner/spinner.ts","../../src/pages/item-details-spinner/item-details-spinner.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAiE;AACjB;AACZ;AAepC;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAbzB,uEAAQ,CAAC;YACN,YAAY,EAAE;gBACV,yDAAO;aACV;YACD,OAAO,EAAE;gBACL,sEAAe,CAAC,QAAQ,CAAC,yDAAO,CAAC;aACpC;YACD,OAAO,EAAE;gBACL,yDAAO;aACV;YACD,OAAO,EAAE,CAAC,6EAAsB,CAAC;SACpC,CAAC;OAEW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;ACjBuC;AACjB;AACgB;AAEQ;AAaxE;IAAA;IAA2C,CAAC;IAA/B,4BAA4B;QAXxC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,qFAAsB;aACvB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,qFAAsB,CAAC;gBAChD,iFAAa;aACd;YACD,OAAO,EAAE,CAAC,6EAAsB,CAAC;SAClC,CAAC;OAEW,4BAA4B,CAAG;IAAD,mCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;ACjBQ;AAQjD;IAIE;QAAA,iBAAgB;QAMhB,YAAO,GAAG;YACR,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;QACnB,CAAC;IARc,CAAC;IAEhB,iCAAe,GAAf;QACE,IAAI,CAAC,IAAI,GAAG,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;IACtD,CAAC;IAPc;QAAd,oEAAK,CAAC,MAAM,CAAC;;yCAAW;IADd,OAAO;QAJnB,wEAAS,CAAC;YACP,QAAQ,EAAE,SAAS;WACQ;SAC9B,CAAC;;OACW,OAAO,CAanB;IAAD,CAAC;AAAA;SAbY,OAAO,mB;;;;;;;;;;;;;;;;;;;;ACRsB;AACe;AASzD;IAME,gCAAmB,OAAsB,EAAE,SAAoB;QAA/D,iBAYC;QAZkB,YAAO,GAAP,OAAO,CAAe;QAFzC,WAAM,GAAQ,EAAE,CAAC;QAGf,8EAA8E;QAC9E,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAC7D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBAC7C,KAAI,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAlBU,sBAAsB;QAHlC,wEAAS,CAAC;WAC+B;SACzC,CAAC;+BAO+D;OANpD,sBAAsB,CAmBlC;IAAD,CAAC;AAAA;SAnBY,sBAAsB,iB","file":"31.js","sourcesContent":["import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { Spinner } from './spinner';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        Spinner,\r\n    ],\r\n    imports: [\r\n        IonicPageModule.forChild(Spinner),\r\n    ],\r\n    exports: [\r\n        Spinner\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class SpinnerModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/spinner/spinner.module.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ItemDetailsPageSpinner } from './item-details-spinner';\r\n\r\nimport { SpinnerModule } from '../../components/spinner/spinner.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ItemDetailsPageSpinner,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ItemDetailsPageSpinner),\r\n    SpinnerModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class ItemDetailsPageSpinnerModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/item-details-spinner/item-details-spinner.module.ts","import { Component, Input } from '@angular/core';\r\nimport { IonicPage } from 'ionic-angular';\r\n\r\n@IonicPage()\r\n@Component({\r\n    selector: 'spinner',\r\n    templateUrl: 'spinner.html'\r\n})\r\nexport class Spinner {\r\n  @Input('data') data: any;\r\n  path : string;\r\n\r\n  constructor() {}\r\n\r\n  ngAfterViewInit() {\r\n    this.path = \"assets/svg/\" + this.data.icon + \".svg\";\r\n  }\r\n\r\n  getData = ():any => {\r\n    return this.data;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/spinner/spinner.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { SpinnerDialog } from 'ionic-native';\r\n\r\nimport { IService } from '../../services/IService';\r\n\r\n@IonicPage()\r\n@Component({\r\n  templateUrl: 'item-details-spinner.html'\r\n})\r\nexport class ItemDetailsPageSpinner {\r\n\r\n  page: any;\r\n  service: IService;\r\n  params: any = {};\r\n\r\n  constructor(public navCtrl: NavController, navParams: NavParams) {\r\n    // If we navigated to this page, we will have an item available as a nav param\r\n    this.page = navParams.get('page');\r\n    this.service = navParams.get('service');\r\n    if (this.service) {\r\n      this.params = this.service.prepareParams(this.page, navCtrl);\r\n      this.service.load(this.page).subscribe(snapshot => {\r\n        this.params.data = snapshot;\r\n      });\r\n    } else {\r\n      navCtrl.setRoot(\"HomePage\");\r\n    }\t\t\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/item-details-spinner/item-details-spinner.ts"],"sourceRoot":""}