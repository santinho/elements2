var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Injectable } from '@angular/core';
/**
 * @return {?}
 */
export function _window() {
    // return the global native browser window object
    return window;
}
var WindowSrv = (function () {
    function WindowSrv() {
    }
    Object.defineProperty(WindowSrv.prototype, "nativeWindow", {
        /**
         * @return {?}
         */
        get: function () {
            return _window();
        },
        enumerable: true,
        configurable: true
    });
    return WindowSrv;
}());
WindowSrv = __decorate([
    Injectable()
], WindowSrv);
export { WindowSrv };
//# sourceMappingURL=window.service.js.map